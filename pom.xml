<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>to.grindelf</groupId>
	<artifactId>apartmentmanager</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>ApartmentManager</name>
	<description>Apartment manager with both web and desktop applications.</description>
	<url/>

	<licenses>
		<license/>
	</licenses>

	<developers>
		<developer/>
	</developers>

	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>

	<properties>
		<java.version>23</java.version>
		<junit.version>5.10.2</junit.version>
	</properties>

	<dependencies>
		<!-- Spring Boot Web for RESTful APIs and HTML rendering -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Spring Boot for Thymeleaf templates (if you are using HTML templates) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<!-- Spring Boot Data JPA (optional, if you're using JPA/Hibernate for database) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Spring Boot Security for handling authentication (optional) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
            		<groupId>org.openjfx</groupId>
            		<artifactId>javafx-controls</artifactId>
            		<version>20.0.1</version>
        	</dependency>
        	<dependency>
            		<groupId>org.openjfx</groupId>
            		<artifactId>javafx-fxml</artifactId>
            		<version>20.0.1</version>
        	</dependency>
       		<dependency>
           		 <groupId>org.junit.jupiter</groupId>
           		 <artifactId>junit-jupiter-api</artifactId>
           		 <version>${junit.version}</version>
           		 <scope>test</scope>
        	</dependency>
        	<dependency>
            		<groupId>org.junit.jupiter</groupId>
            		<artifactId>junit-jupiter-engine</artifactId>
            		<version>${junit.version}</version>
            		<scope>test</scope>
        	</dependency>
		<dependency>
    			<groupId>org.assertj</groupId>
    			<artifactId>assertj-core</artifactId>
    			<version>3.26.3</version>
    			<scope>test</scope>
		</dependency>
		<dependency>
    			<groupId>com.fasterxml.jackson.core</groupId>
    			<artifactId>jackson-core</artifactId>
    			<version>2.18.0</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains</groupId>
			<artifactId>annotations</artifactId>
			<version>24.0.0</version>
		</dependency>

		<!--DB management-->
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			<version>3.41.2.2</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
